{"ast":null,"code":"var _jsxFileName = \"/home/yash/2019101071/frontend/src/components/JobListings.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios'; // import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Button from 'react-bootstrap/Button';\nexport default class JobListings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listings: []\n    };\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem('token');\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': token\n    };\n    axios.post('http://localhost:4000/api/jobs/view', {\n      'type': 1\n    }, {\n      headers: headers\n    }).then(response => {\n      console.log(response.data);\n      this.setState({\n        listings: response.data\n      });\n    }).catch(function (error) {\n      if (error.response.data.message) alert(error.response.data.message);\n      console.log(error);\n    });\n  }\n\n  deleteJob(id) {\n    let token = localStorage.getItem('token');\n    console.log(token);\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': token\n    };\n    axios.post('http://localhost:4000/api/jobs/delete/', {\n      'id': id\n    }, {\n      headers: headers\n    }).then(response => {\n      console.log(response.data);\n    });\n    this.setState({\n      listings: this.state.listings.filter(el => el._id !== id)\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Date of Posting\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"No of Applications\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Positions\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Edit\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.listings.map((job, i) => {\n      let left = 0;\n      if (job.maxapp > job.no_app) left = job.no_app;else left = job.maxapp;\n      return React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: '/jobapplications',\n          state: {\n            id: job._id,\n            title: job.title\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, job.title, \" \")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, job.date_of_posting), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, left, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, job.positions), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \" \", React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => {\n          this.deleteJob(job._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Delete\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: './jobedit',\n          state: {\n            'id': job._id,\n            'maxapp': job.maxapp,\n            'positions': job.positions,\n            'deadline': job.deadline\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Edit\")));\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/yash/2019101071/frontend/src/components/JobListings.js"],"names":["React","Component","axios","BrowserRouter","Router","Route","Link","Button","JobListings","constructor","props","state","listings","componentDidMount","token","localStorage","getItem","headers","post","then","response","console","log","data","setState","catch","error","message","alert","deleteJob","id","filter","el","_id","render","map","job","i","left","maxapp","no_app","pathname","title","date_of_posting","positions","deadline"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAoD,kBAApD;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,eAAe,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAE/CQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAb;AACH;;AAGDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,UAAMC,OAAO,GAAG;AACZ,sBAAgB,kBADJ;AAEZ,uBAAiBH;AAFL,KAAhB;AAKAZ,IAAAA,KAAK,CAACgB,IAAN,CAAW,qCAAX,EAAiD;AAAC,cAAQ;AAAT,KAAjD,EAA8D;AAAED,MAAAA,OAAO,EAAEA;AAAX,KAA9D,EACME,IADN,CACWC,QAAQ,IAAI;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,WAAKC,QAAL,CAAc;AAACZ,QAAAA,QAAQ,EAAEQ,QAAQ,CAACG;AAApB,OAAd;AACF,KAJN,EAKME,KALN,CAKY,UAASC,KAAT,EAAgB;AACpB,UAAGA,KAAK,CAACN,QAAN,CAAeG,IAAf,CAAoBI,OAAvB,EACAC,KAAK,CAACF,KAAK,CAACN,QAAN,CAAeG,IAAf,CAAoBI,OAArB,CAAL;AACCN,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,KATN;AAUH;;AACDG,EAAAA,SAAS,CAACC,EAAD,EAAK;AACV,QAAIhB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,UAAMG,OAAO,GAAG;AACZ,sBAAgB,kBADJ;AAEZ,uBAAiBH;AAFL,KAAhB;AAIAZ,IAAAA,KAAK,CAACgB,IAAN,CAAW,wCAAX,EAAoD;AAAC,YAAMY;AAAP,KAApD,EAAgE;AAACb,MAAAA,OAAO,EAAEA;AAAV,KAAhE,EACGE,IADH,CACQC,QAAQ,IAAI;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AAA2B,KADjD;AAGA,SAAKC,QAAL,CAAc;AACZZ,MAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAX,CAAoBmB,MAApB,CAA2BC,EAAE,IAAIA,EAAE,CAACC,GAAH,KAAWH,EAA5C;AADE,KAAd;AAGH;;AAODI,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,CADJ,CADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKvB,KAAL,CAAWC,QAAX,CAAoBuB,GAApB,CAAwB,CAACC,GAAD,EAAMC,CAAN,KAAY;AAChC,UAAIC,IAAI,GAAG,CAAX;AACA,UAAGF,GAAG,CAACG,MAAJ,GAAaH,GAAG,CAACI,MAApB,EAA4BF,IAAI,GAAGF,GAAG,CAACI,MAAX,CAA5B,KACKF,IAAI,GAAGF,GAAG,CAACG,MAAX;AACL,aACI;AAAI,QAAA,GAAG,EAAEF,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE;AAAEI,UAAAA,QAAQ,EAAE,kBAAZ;AAAgC9B,UAAAA,KAAK,EAAE;AAAEmB,YAAAA,EAAE,EAAEM,GAAG,CAACH,GAAV;AAAeS,YAAAA,KAAK,EAAEN,GAAG,CAACM;AAA1B;AAAvC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsFN,GAAG,CAACM,KAA1F,MAAJ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKN,GAAG,CAACO,eAAT,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKL,IAAL,MAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,GAAG,CAACQ,SAAT,CAJJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAK,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,QAAhB;AAAyB,QAAA,OAAO,EAAE,MAAM;AAAC,eAAKf,SAAL,CAAeO,GAAG,CAACH,GAAnB;AAAyB,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAL,CANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE;AAAEQ,UAAAA,QAAQ,EAAE,WAAZ;AAAyB9B,UAAAA,KAAK,EAAE;AAAE,kBAAMyB,GAAG,CAACH,GAAZ;AAAiB,sBAASG,GAAG,CAACG,MAA9B;AAAqC,yBAAYH,GAAG,CAACQ,SAArD;AAA+D,wBAAWR,GAAG,CAACS;AAA9E;AAAhC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,CAPJ,CADJ;AAYH,KAhBD,CAFJ,CAXJ,CADJ,CADJ;AAqCH;;AApF8C","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nimport Button from 'react-bootstrap/Button'\n\nexport default class JobListings extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {listings: []}\n    }\n\n\n    componentDidMount() {\n        let token = localStorage.getItem('token');\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': token\n          }    \n\n        axios.post('http://localhost:4000/api/jobs/view',{'type': 1}, { headers: headers} )\n             .then(response => {\n                console.log(response.data)\n                this.setState({listings: response.data});\n             })\n             .catch(function(error) {\n                if(error.response.data.message)\n                alert(error.response.data.message);\n                 console.log(error);\n             })\n    }\n    deleteJob(id) {\n        let token = localStorage.getItem('token');\n        console.log(token);\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': token\n        }    \n        axios.post('http://localhost:4000/api/jobs/delete/',{'id': id}, {headers: headers})\n          .then(response => { console.log(response.data)});\n    \n        this.setState({\n          listings: this.state.listings.filter(el => el._id !== id)\n        })\n    }\n\n\n\n\n   \n\n    render() {\n        return (\n            <div>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th>Date of Posting</th>\n                            <th>No of Applications</th>\n                            <th>Positions</th>\n                            <th>Delete</th>\n                            <th>Edit</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    { \n                        this.state.listings.map((job, i) => {\n                            let left = 0;\n                            if(job.maxapp > job.no_app) left = job.no_app; \n                            else left = job.maxapp;\n                            return (\n                                <tr key={i} >\n                                    <td><Link to={{ pathname: '/jobapplications', state: { id: job._id, title: job.title} }}>{job.title} </Link></td>\n                                    <td>{job.date_of_posting}</td>\n                                    <td>{left} </td>\n                                    <td>{job.positions}</td>\n\n                                    <td> <Button variant=\"danger\" onClick={() => {this.deleteJob(job._id) }}>Delete</Button></td>\n                                    <th><Link to={{ pathname: './jobedit', state: { 'id': job._id, 'maxapp':job.maxapp,'positions':job.positions,'deadline':job.deadline} }}>Edit</Link></th>\n                                </tr>\n                            )\n\n                        })\n                    }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}